{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red110\green32\blue13;\red48\green111\blue121;\red77\green0\blue158;
\red180\green0\blue98;\red68\green137\blue147;\red92\green38\blue153;\red29\green133\blue25;\red46\green13\blue110;
\red32\green60\blue63;\red186\green0\blue17;\red14\green14\blue255;\red0\green11\blue255;}
\margl1440\margr1440\vieww12360\viewh9820\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 #pragma mark - the example of how to use executeForResults\
\
//
\f1 \'ca\'b9\'d3\'c3ESP
\f0 Touch 
\f1 \'b7\'b5\'bb\'d8\'b5\'c4\'bd\'e1\'b9\'fb
\f0 \
\cf0 - (\cf3 ESPTouchResult\cf0  *) executeForResults\
\{\
    \cf4 NSString\cf0  *apSsid = \cf5 self\cf0 .\cf6 wifiText\cf0 .\cf7 text\cf0 ;\
    \cf4 NSString\cf0  *apPwd = \cf5 self\cf0 .\cf6 password\cf0 .\cf7 text\cf0 ;\
    \cf4 NSString\cf0  *apBssid = \cf5 self\cf0 .\cf6 bssid\cf0 ;\
    \cf5 BOOL\cf0  isSsidHidden = \cf5 YES\cf0 ;\
    \cf8 //    int taskCount = [self._taskResultCountTextView.text intValue];\cf0 \
    \cf5 self\cf0 .\cf6 _esptouchTask\cf0  =\
    [[\cf3 ESPTouchTask\cf0  \cf9 alloc\cf0 ]\cf10 initWithApSsid\cf0 :apSsid \cf10 andApBssid\cf0 :apBssid \cf10 andApPwd\cf0 :apPwd \cf10 andIsSsidHiden\cf0 :isSsidHidden];\
    \
    \cf3 ESPTouchResult\cf0  * esptouchResult = [\cf5 self\cf0 .\cf6 _esptouchTask\cf0  \cf10 executeForResult\cf0 ];\
    \cf9 NSLog\cf0 (\cf11 @"ESPViewController executeForResult() result is: %@"\cf0 ,esptouchResult);\
    \cf5 return\cf0  esptouchResult;\
\}\
\cf8 // enable confirm button\

\f1 \'b1\'e4\'bb\'af\'b0\'b4\'c5\'a5\'b5\'c4\'b1\'ea\'cc\'e2
\f0 \cf0 \
- (\cf5 void\cf0 )enableConfirmBtn\
\{\
    \cf5 self\cf0 .\cf6 _isConfirmState\cf0  = \cf5 YES\cf0 ;\
\cf8 //    [self._connect setTitle:@"Confirm" forState:UIControlStateNormal];\cf0 \
    [\cf5 self\cf0 .\cf6 connect\cf0  \cf9 setTitle\cf0 :\cf11 @"
\f1 \'c1\'ac\'bd\'d3
\f0 "\cf0  \cf9 forState\cf0 :\cf9 UIControlStateNormal\cf0 ];\
\
\}\
\
\cf8 // enable cancel button\cf0 \
- (\cf5 void\cf0 )enableCancelBtn\
\{\
    \cf5 self\cf0 .\cf6 _isConfirmState\cf0  = \cf5 NO\cf0 ;\
\cf8 //    [self._connect setTitle:@"Cancel" forState:UIControlStateNormal];\cf0 \
    [\cf5 self\cf0 .\cf6 connect\cf0  \cf9 setTitle\cf0 :\cf11 @"
\f1 \'c8\'a1\'cf\'fb
\f0 "\cf0  \cf9 forState\cf0 :\cf9 UIControlStateNormal\cf0 ];\
\
\}\
- (\cf4 NSString\cf0  *)fetchSsid\
\{\
    \cf4 NSDictionary\cf0  *ssidInfo = [\cf5 self\cf0  \cf10 fetchNetInfo\cf0 ];\
    \
    \cf5 return\cf0  [ssidInfo \cf9 objectForKey\cf0 :\cf11 @"SSID"\cf0 ];\
\}\
\
- (\cf4 NSString\cf0  *)fetchBssid\
\{\
    \cf4 NSDictionary\cf0  *bssidInfo = [\cf5 self\cf0  \cf10 fetchNetInfo\cf0 ];\
    \
    \cf5 return\cf0  [bssidInfo \cf9 objectForKey\cf0 :\cf11 @"BSSID"\cf0 ];\
\}\
\
\cf8 // refer to {\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/5198716/iphone-get-ssid-without-private-library"}}{\fldrslt \cf12 http://stackoverflow.com/questions/5198716/iphone-get-ssid-without-private-library}}\cf12 \

\f1 //\'bb\'f1\'c8\'a1\'c1\'ac\'bd\'d3\'b5\'c4wifi\'b5\'c4\'c3\'fb\'d7\'d6
\f0 \cf0 \
- (\cf4 NSDictionary\cf0  *)fetchNetInfo\
\{\
    \cf4 NSArray\cf0  *interfaceNames = \cf9 CFBridgingRelease\cf0 (\cf9 CNCopySupportedInterfaces\cf0 ());\
    \cf8 //    NSLog(@"%s: Supported interfaces: %@", __func__, interfaceNames);\cf0 \
    \
    \cf4 NSDictionary\cf0  *SSIDInfo;\
    \cf5 for\cf0  (\cf4 NSString\cf0  *interfaceName \cf5 in\cf0  interfaceNames) \{\
        SSIDInfo = \cf9 CFBridgingRelease\cf0 (\
                                     \cf9 CNCopyCurrentNetworkInfo\cf0 ((\cf5 __bridge\cf0  \cf7 CFStringRef\cf0 )interfaceName));\
        \cf8 //        NSLog(@"%s: %@ => %@", __func__, interfaceName, SSIDInfo);\cf0 \
        \
        \cf5 BOOL\cf0  isNotEmpty = (SSIDInfo.\cf7 count\cf0  > \cf13 0\cf0 );\
        \cf5 if\cf0  (isNotEmpty) \{\
            \cf5 break\cf0 ;\
        \}\
    \}\
    \cf5 return\cf0  SSIDInfo;\
\}\
}