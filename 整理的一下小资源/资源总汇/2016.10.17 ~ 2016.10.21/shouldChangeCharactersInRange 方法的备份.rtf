{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red110\green32\blue13;\red180\green0\blue98;\red29\green133\blue25;
\red186\green0\blue17;\red0\green11\blue255;\red77\green0\blue158;\red92\green38\blue153;\red46\green13\blue110;
\red68\green137\blue147;\red32\green60\blue63;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25280\viewh15480\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 #pragma mark 
\f1 \'d5\'fd\'c8\'b7\'b5\'c4
\f0 TextField
\f1 \'c5\'d0\'b6\'cf
\f0  textFieldDelegate\
\cf0 - (\cf3 BOOL\cf0 )textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string \{\
    \cf4 //    NSLog(@"string:%@",string);\cf0 \
    \cf4 //    NSString* textString =@"sdfsfsfsAdfsdf";\cf0 \
    \cf4 //    textString = [textString substringToIndex:7];//
\f1 \'bd\'d8\'c8\'a1\'b5\'f4\'cf\'c2\'b1\'ea
\f0 7
\f1 \'d6\'ae\'ba\'f3\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \cf0 \
    \cf4 //    NSLog(@"
\f1 \'bd\'d8\'c8\'a1\'b5\'c4\'d6\'b5\'ce\'aa\'a3\'ba
\f0 %@",textString);\cf0 \
    \cf4 //    textString = [textString substringFromIndex:2];//
\f1 \'bd\'d8\'c8\'a1\'b5\'f4\'cf\'c2\'b1\'ea
\f0 2
\f1 \'d6\'ae\'c7\'b0\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \cf0 \
    \cf4 //    NSLog(@"
\f1 \'bd\'d8\'c8\'a1\'b5\'c4\'d6\'b5\'ce\'aa\'a3\'ba
\f0 %@",textString);\cf0 \
    NSLog(\cf5 @"%@"\cf0 ,string);\
    \cf3 if\cf0  (textField == moneyTextField) \{\
        NSMutableString * futureString = [NSMutableString stringWithString:textField.text];\
        \
        \cf4 //
\f1 \'b5\'da\'d2\'bb\'b2\'bf\'b7\'d6
\f0 \cf0 \
        \cf4 //        if ([futureString floatValue] > [_maxTransferMoneyStr floatValue]) \{\cf0 \
        \cf4 //            NSString *textString =futureString;\cf0 \
        \cf4 //            for (int i = (int)futureString.length-1; i>=0; i--) \{\cf0 \
        \cf4 //                textString = [textString substringToIndex:i];\cf0 \
        \cf4 //                if ([textString floatValue]<[_maxTransferMoneyStr floatValue]) \{\cf0 \
        \cf4 //                    textField.text = textString;\cf0 \
        \cf4 //                \}\cf0 \
        \cf4 //                break;\cf0 \
        \cf4 //            \}\cf0 \
        \
        \cf4 //
\f1 \'b5\'da\'b6\'fe\'b2\'bf\'b7\'d6
\f0 \cf0 \
        \cf4 //            int a = futureString.length;\cf0 \
        \cf4 //            NSString *textString = futureString;\cf0 \
        \cf4 //            do \{\cf0 \
        \cf4 //                textString = [futureString substringToIndex:a];\cf0 \
        \cf4 //                a--;\cf0 \
        \cf4 //            \} while ([textString floatValue]>[_maxTransferMoneyStr floatValue]);\cf0 \
        \cf4 //            NSLog(@"%@",textString);\cf0 \
        \cf4 //            textField.text = textString;\cf0 \
        \
        \cf4 //
\f1 \'b5\'da\'c8\'fd\'b2\'bf\'b7\'d6
\f0 \cf0 \
        \cf4 //            int a = futureString.length-1;\cf0 \
        \cf4 //            NSString *textString = futureString;\cf0 \
        \cf4 //            do \{\cf0 \
        \cf4 //                textString = [futureString substringToIndex:a];\cf0 \
        \cf4 //                NSLog(@"%d%@",a,textString);\cf0 \
        \cf4 //                textField.text = textString;\cf0 \
        \cf4 //                a--;\cf0 \
        \cf4 //            \} while ([textString floatValue]>[_maxTransferMoneyStr floatValue]);\cf0 \
        \cf4 //        \}\cf0 \
        [futureString  insertString:string atIndex:range.location];\
        \cf3 float\cf0  moneyFloat = [futureString floatValue];\
        \cf3 if\cf0  (moneyFloat > [_maxTransferMoneyStr floatValue]) \{\
            [\cf3 self\cf0  _showErrorView:[NSString stringWithFormat:\cf5 @"
\f1 \'d7\'ee\'b4\'f3\'bd\'f0\'b6\'ee\'ca\'e4\'c8\'eb\'ce\'aa
\f0 %@"\cf0 ,_maxTransferMoneyStr]];\
            \cf3 return\cf0  \cf3 NO\cf0 ;\
        \}\
        \cf4 //
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'ca\'c7\'b7\'f1\'b2\'e9\'d5\'d2\'b5\'bd
\f0 \'93
\f1 \'d0\'a1\'ca\'fd\'b5\'e3
\f0 \'94\cf0 \
        \cf3 if\cf0  ([textField.text rangeOfString:\cf5 @"."\cf0 ].location==NSNotFound) \{\
            _isHaveDian = \cf3 NO\cf0 ;\
        \}\
        \cf4 //
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'ca\'c7\'b7\'f1\'b2\'e9\'d5\'d2\'b5\'bd
\f0 \'93
\f1 \'ca\'fd\'d7\'d6
\f0 0\'94\cf0 \
        \cf3 if\cf0  ([textField.text rangeOfString:\cf5 @"0"\cf0 ].location==NSNotFound) \{\
            _isFirstZero = \cf3 NO\cf0 ;\
        \}\
        \
        \cf3 if\cf0  ([string length]>\cf6 0\cf0 )\
        \{\
            \cf4 //            NSLog(@"sting
\f1 \'a3\'ba
\f0 %@",string);\cf0 \
            unichar single=[string characterAtIndex:\cf6 0\cf0 ];\cf4 //
\f1 \'b5\'b1\'c7\'b0\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \cf0 \
            \cf3 if\cf0  ((single >=\cf6 '0'\cf0  && single<=\cf6 '9'\cf0 ) || single==\cf6 '.'\cf0 )\cf4 //
\f1 \'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'d5\'fd\'c8\'b7
\f0 \cf0 \
            \{\
                \cf3 if\cf0 ([textField.text length]==\cf6 0\cf0 )\{\
                    \cf3 if\cf0 (single == \cf6 '.'\cf0 )\{\
                        \cf4 //
\f1 \'ca\'d7\'d7\'d6\'c4\'b8\'b2\'bb\'c4\'dc\'ce\'aa\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\
                    \cf3 if\cf0  (single == \cf6 '0'\cf0 ) \{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'ca\'e4\'c8\'eb\'ce\'aa\'ca\'fd\'d7\'d6
\f0 0\cf0 \
                        _isFirstZero = \cf3 YES\cf0 ;\
                        \cf4 //                        [self showErrorView:@"
\f1 \'d7\'ee\'d0\'a1\'ca\'e4\'c8\'eb\'bd\'f0\'b6\'ee\'ce\'aa
\f0 0.01
\f1 \'d4\'aa
\f0 "];\cf0 \
                        [\cf3 self\cf0  _showErrorView:[NSString stringWithFormat:\cf5 @"
\f1 \'d7\'ee\'d0\'a1\'bd\'f0\'b6\'ee\'ce\'aa
\f0 %@"\cf0 ,_minTransferMoneyStr]];\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\
                \}\
                \cf3 if\cf0  (single==\cf6 '.'\cf0 )\{\
                    \cf3 if\cf0 (!_isHaveDian)\cf4 //text
\f1 \'d6\'d0\'bb\'b9\'c3\'bb\'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                    \{\
                        _isHaveDian=\cf3 YES\cf0 ;\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\cf3 else\cf0 \{\
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\
                \}\
                \cf3 else\cf0  \cf3 if\cf0 (single==\cf6 '0'\cf0 )\{\
                    \cf3 if\cf0  ((_isFirstZero&&_isHaveDian)||(!_isFirstZero&&_isHaveDian)) \{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'d3\'d0
\f0 .
\f1 \'a3\'a8
\f0 0.01
\f1 \'a3\'a9\'bb\'f2\'ca\'d7\'ce\'bb\'c3\'bb
\f0 0
\f1 \'d3\'d0
\f0 .
\f1 \'a3\'a8
\f0 10200.00
\f1 \'a3\'a9\'bf\'c9\'ca\'e4\'c8\'eb\'c1\'bd\'ce\'bb\'ca\'fd\'b5\'c4
\f0 0\cf0 \
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0 
\f1 \'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'bb\'f2\'d4\'f2
\f0  
\f1 \'ca\'d7\'ce\'bb\'b2\'bb\'ce\'aa
\f0 0 
\f1 \'cd\'ac\'ca\'b1\'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                        NSLog(\cf5 @"%@"\cf0 ,textField.text);\
                        \cf3 if\cf0 ([textField.text isEqualToString:\cf5 @"0.0"\cf0 ])\{\
                            \cf3 return\cf0  \cf3 NO\cf0 ;\
                        \}\
                        NSInteger flag=\cf6 0\cf0 ;\
                        \cf3 const\cf0  NSInteger limited = \cf6 2\cf0 ;\
                        \cf3 for\cf0  (\cf3 int\cf0  i = futureString.length-\cf6 1\cf0 ; i>=\cf6 0\cf0 ; i--) \{\
                            \
                            \cf3 if\cf0  ([futureString characterAtIndex:i] == \cf6 '.'\cf0 ) \{\
                                \
                                \cf3 if\cf0  (flag > limited) \{\
                                    \cf3 return\cf0  \cf3 NO\cf0 ;\
                                \}\
                                \cf3 break\cf0 ;\
                            \}\
                            flag++;\
                        \}\
                        \
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\cf3 else\cf0  \cf3 if\cf0  (_isFirstZero&&!_isHaveDian)\{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'c3\'bb
\f0 .
\f1 \'b2\'bb\'c4\'dc\'d4\'d9\'ca\'e4\'c8\'eb
\f0 0\cf0 \
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\cf3 else\cf0 \{\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\
                \}\
                \cf3 else\cf0 \{\
                    \cf3 if\cf0  (_isHaveDian)\{\
                        \cf4 //
\f1 \'b4\'e6\'d4\'da\'d0\'a1\'ca\'fd\'b5\'e3\'a3\'ac\'b1\'a3\'c1\'f4\'c1\'bd\'ce\'bb\'d0\'a1\'ca\'fd
\f0 \cf0 \
                        NSInteger flag=\cf6 0\cf0 ;\
                        \cf3 const\cf0  NSInteger limited = \cf6 2\cf0 ;\
                        \cf3 for\cf0  (\cf3 int\cf0  i = futureString.length-\cf6 1\cf0 ; i>=\cf6 0\cf0 ; i--) \{\
                            \
                            \cf3 if\cf0  ([futureString characterAtIndex:i] == \cf6 '.'\cf0 ) \{\
                                \
                                \cf3 if\cf0  (flag > limited) \{\
                                    \cf3 return\cf0  \cf3 NO\cf0 ;\
                                \}\
                                \cf3 break\cf0 ;\
                            \}\
                            flag++;\
                        \}\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\cf3 else\cf0  \cf3 if\cf0 (_isFirstZero&&!_isHaveDian)\{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'c3\'bb\'b5\'e3
\f0 \cf0 \
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\cf3 else\cf0 \{\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\
                \}\
            \}\cf3 else\cf0 \{\
                \cf4 //
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'b2\'bb\'d5\'fd\'c8\'b7
\f0  
\f1 \'b2\'bb\'c4\'dc\'ca\'e4\'c8\'eb\'b3\'fd\'c1\'cb
\f0 0-9
\f1 \'ba\'cd\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'d6\'ae\'cd\'e2\'b5\'c4
\f0  
\f1 \'d7\'d6\'b7\'fb
\f0 \cf0 \
                [\cf3 self\cf0  showErrorView:\cf5 @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'ca\'fd\'d7\'d6\'a3\'ac\'c7\'d2\'d0\'a1\'ca\'fd\'b5\'e3\'ba\'f3\'d7\'ee\'b6\'e0\'ca\'e4\'c8\'eb\'c1\'bd\'ce\'bb
\f0 "\cf0 ];\
                \cf3 return\cf0  \cf3 NO\cf0 ;\
            \}\
        \}\
        \cf4 //        if (string.length == 0) \{\cf0 \
        \cf4 //            textField.text = @"";\cf0 \
        \cf4 //            return YES;\cf0 \
        \cf4 //        \}\cf0 \
        \cf3 else\cf0 \{\
            \cf3 return\cf0  \cf3 YES\cf0 ;\
        \}\
    \}\
    \cf3 if\cf0  (textField == dealNumTextField) \{\
        \cf3 if\cf0  ([string length]>\cf6 0\cf0 )\
        \{\
            NSLog(\cf5 @"sting
\f1 \'a3\'ba
\f0 %@"\cf0 ,string);\
            \cf3 for\cf0  (\cf3 int\cf0  i = \cf6 0\cf0 ; i < string.length; i++) \{\
                unichar single=[string characterAtIndex:i];\cf4 //
\f1 \'b5\'b1\'c7\'b0\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \cf0 \
                \cf3 if\cf0  ((single >=\cf6 '0'\cf0  && single<=\cf6 '9'\cf0 ))\cf4 //
\f1 \'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'d5\'fd\'c8\'b7
\f0 \cf0 \
                \{\
                    NSLog(\cf5 @"theSingle:%hu"\cf0 ,single);\
                \}\cf3 else\cf0 \{\
                    \cf4 //
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'b2\'bb\'d5\'fd\'c8\'b7
\f0  
\f1 \'b2\'bb\'c4\'dc\'ca\'e4\'c8\'eb\'b3\'fd\'c1\'cb
\f0 0-9
\f1 \'ba\'cd\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'d6\'ae\'cd\'e2\'b5\'c4
\f0  
\f1 \'d7\'d6\'b7\'fb
\f0 \cf0 \
                    [\cf3 self\cf0  showErrorView:\cf5 @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'ca\'fd\'d7\'d6
\f0 "\cf0 ];\
                    \cf3 return\cf0  \cf3 NO\cf0 ;\
                \}\
            \}\
        \}\
        \cf3 else\cf0 \{\
            \cf3 return\cf0  \cf3 YES\cf0 ;\
        \}\
    \}\
    \cf3 return\cf0  \cf3 YES\cf0 ;\
\}\
\
\
\
- (\cf3 BOOL\cf0 )textField:(\cf7 UITextField\cf0  *)textField shouldChangeCharactersInRange:(\cf8 NSRange\cf0 )range replacementString:(\cf7 NSString\cf0  *)string \{\
    \cf9 NSLog\cf0 (\cf5 @"%@"\cf0 ,string);\
    \cf3 if\cf0  (textField == \cf10 moneyTextField\cf0 ) \{\
        \cf7 NSMutableString\cf0  * futureString = [\cf7 NSMutableString\cf0  \cf9 stringWithString\cf0 :textField.\cf8 text\cf0 ];\
        \cf4 //
\f1 \'b5\'da\'b6\'fe\'b2\'bf\'b7\'d6
\f0 \cf0 \
        \cf3 int\cf0  a = (\cf3 int\cf0 )futureString.\cf8 length\cf0 ;\
        \cf7 NSString\cf0  *textString = futureString;\
        \cf3 do\cf0  \{\
            textString = [futureString \cf9 substringToIndex\cf0 :a];\
            a--;\
        \} \cf3 while\cf0  ([textString \cf9 floatValue\cf0 ]>[\cf10 _maxTransferMoneyStr\cf0  \cf9 floatValue\cf0 ]);\
        \cf9 NSLog\cf0 (\cf5 @"%@"\cf0 ,textString);\
        textField.\cf8 text\cf0  = textString;\
        \cf4 //\cf0 \
        [futureString  \cf9 insertString\cf0 :string \cf9 atIndex\cf0 :range.\cf8 location\cf0 ];\
        \cf3 float\cf0  moneyFloat = [futureString \cf9 floatValue\cf0 ];\
        \cf3 if\cf0  (moneyFloat > [\cf10 _maxTransferMoneyStr\cf0  \cf9 floatValue\cf0 ]) \{\
            [\cf3 self\cf0  \cf11 _showErrorView\cf0 :[\cf7 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf5 @"
\f1 \'d7\'ee\'b4\'f3\'bd\'f0\'b6\'ee\'ca\'e4\'c8\'eb\'ce\'aa
\f0 %@"\cf0 ,\cf10 _maxTransferMoneyStr\cf0 ]];\
            \cf3 return\cf0  \cf3 NO\cf0 ;\
        \}\
        \cf4 //
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'ca\'c7\'b7\'f1\'b2\'e9\'d5\'d2\'b5\'bd
\f0 \'93
\f1 \'d0\'a1\'ca\'fd\'b5\'e3
\f0 \'94\cf0 \
        \cf3 if\cf0  ([textField.\cf8 text\cf0  \cf9 rangeOfString\cf0 :\cf5 @"."\cf0 ].\cf8 location\cf0 ==\cf8 NSNotFound\cf0 ) \{\
            \cf10 _isHaveDian\cf0  = \cf3 NO\cf0 ;\
        \}\
        \cf4 //
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'ca\'c7\'b7\'f1\'b2\'e9\'d5\'d2\'b5\'bd
\f0 \'93
\f1 \'ca\'fd\'d7\'d6
\f0 0\'94\cf0 \
        \cf3 if\cf0  ([textField.\cf8 text\cf0  \cf9 rangeOfString\cf0 :\cf5 @"0"\cf0 ].\cf8 location\cf0 ==\cf8 NSNotFound\cf0 ) \{\
            \cf10 _isFirstZero\cf0  = \cf3 NO\cf0 ;\
        \}\
        \
        \cf3 if\cf0  ([string \cf9 length\cf0 ]>\cf6 0\cf0 )\
        \{\
            \cf4 //            NSLog(@"sting
\f1 \'a3\'ba
\f0 %@",string);\cf0 \
            \cf8 unichar\cf0  single=[string \cf9 characterAtIndex\cf0 :\cf6 0\cf0 ];\cf4 //
\f1 \'b5\'b1\'c7\'b0\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \cf0 \
            \cf3 if\cf0  ((single >=\cf6 '0'\cf0  && single<=\cf6 '9'\cf0 ) || single==\cf6 '.'\cf0 )\cf4 //
\f1 \'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'d5\'fd\'c8\'b7
\f0 \cf0 \
            \{\
                \cf3 if\cf0 ([textField.\cf8 text\cf0  \cf9 length\cf0 ]==\cf6 0\cf0 )\{\
                    \cf3 if\cf0 (single == \cf6 '.'\cf0 )\{\
                        \cf4 //
\f1 \'ca\'d7\'d7\'d6\'c4\'b8\'b2\'bb\'c4\'dc\'ce\'aa\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\
                    \cf3 if\cf0  (single == \cf6 '0'\cf0 ) \{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'ca\'e4\'c8\'eb\'ce\'aa\'ca\'fd\'d7\'d6
\f0 0\cf0 \
                        \cf10 _isFirstZero\cf0  = \cf3 YES\cf0 ;\
                        [\cf3 self\cf0  \cf11 _showErrorView\cf0 :[\cf7 NSString\cf0  \cf9 stringWithFormat\cf0 :\cf5 @"
\f1 \'d7\'ee\'d0\'a1\'ca\'e4\'c8\'eb\'bd\'f0\'b6\'ee\'ce\'aa
\f0 %@"\cf0 ,\cf10 _minTransferMoneyStr\cf0 ]];\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\
                \}\
                \cf3 if\cf0  (single==\cf6 '.'\cf0 )\{\
                    \cf3 if\cf0 (!\cf10 _isHaveDian\cf0 )\cf4 //text
\f1 \'d6\'d0\'bb\'b9\'c3\'bb\'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                    \{\
                        \cf10 _isHaveDian\cf0 =\cf3 YES\cf0 ;\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\cf3 else\cf0 \{\
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\
                \}\
                \cf3 else\cf0  \cf3 if\cf0 (single==\cf6 '0'\cf0 )\{\
                    \cf3 if\cf0  ((\cf10 _isFirstZero\cf0 &&\cf10 _isHaveDian\cf0 )||(!\cf10 _isFirstZero\cf0 &&\cf10 _isHaveDian\cf0 )) \{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'d3\'d0
\f0 .
\f1 \'a3\'a8
\f0 0.01
\f1 \'a3\'a9\'bb\'f2\'ca\'d7\'ce\'bb\'c3\'bb
\f0 0
\f1 \'d3\'d0
\f0 .
\f1 \'a3\'a8
\f0 10200.00
\f1 \'a3\'a9\'bf\'c9\'ca\'e4\'c8\'eb\'c1\'bd\'ce\'bb\'ca\'fd\'b5\'c4
\f0 0\cf0 \
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0 
\f1 \'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'bb\'f2\'d4\'f2
\f0  
\f1 \'ca\'d7\'ce\'bb\'b2\'bb\'ce\'aa
\f0 0 
\f1 \'cd\'ac\'ca\'b1\'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                        \cf9 NSLog\cf0 (\cf5 @"%@"\cf0 ,textField.\cf8 text\cf0 );\
                        \cf3 if\cf0 ([textField.\cf8 text\cf0  \cf9 isEqualToString\cf0 :\cf5 @"0.0"\cf0 ])\{\
                            \cf3 return\cf0  \cf3 NO\cf0 ;\
                        \}\
                        \cf8 NSInteger\cf0  flag=\cf6 0\cf0 ;\
                        \cf3 const\cf0  \cf8 NSInteger\cf0  limited = \cf6 2\cf0 ;\
                        \cf3 for\cf0  (\cf3 int\cf0  i = (\cf3 int\cf0 )futureString.\cf8 length\cf0 -\cf6 1\cf0 ; i>=\cf6 0\cf0 ; i--) \{\
                            \
                            \cf3 if\cf0  ([futureString \cf9 characterAtIndex\cf0 :i] == \cf6 '.'\cf0 ) \{\
                                \
                                \cf3 if\cf0  (flag > limited) \{\
                                    \cf3 return\cf0  \cf3 NO\cf0 ;\
                                \}\
                                \cf3 break\cf0 ;\
                            \}\
                            flag++;\
                        \}\
                        \
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\cf3 else\cf0  \cf3 if\cf0  (\cf10 _isFirstZero\cf0 &&!\cf10 _isHaveDian\cf0 )\{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'c3\'bb
\f0 .
\f1 \'b2\'bb\'c4\'dc\'d4\'d9\'ca\'e4\'c8\'eb
\f0 0\cf0 \
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\cf3 else\cf0 \{\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\
                \}\
                \cf3 else\cf0 \{\
                    \cf3 if\cf0  (\cf10 _isHaveDian\cf0 )\{\
                        \cf4 //
\f1 \'b4\'e6\'d4\'da\'d0\'a1\'ca\'fd\'b5\'e3\'a3\'ac\'b1\'a3\'c1\'f4\'c1\'bd\'ce\'bb\'d0\'a1\'ca\'fd
\f0 \cf0 \
                        \cf8 NSInteger\cf0  flag=\cf6 0\cf0 ;\
                        \cf3 const\cf0  \cf8 NSInteger\cf0  limited = \cf6 2\cf0 ;\
                        \cf3 for\cf0  (\cf3 int\cf0  i = (\cf3 int\cf0 )futureString.\cf8 length\cf0 -\cf6 1\cf0 ; i>=\cf6 0\cf0 ; i--) \{\
                            \
                            \cf3 if\cf0  ([futureString \cf9 characterAtIndex\cf0 :i] == \cf6 '.'\cf0 ) \{\
                                \
                                \cf3 if\cf0  (flag > limited) \{\
                                    \cf3 return\cf0  \cf3 NO\cf0 ;\
                                \}\
                                \cf3 break\cf0 ;\
                            \}\
                            flag++;\
                        \}\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\cf3 else\cf0  \cf3 if\cf0 (\cf10 _isFirstZero\cf0 &&!\cf10 _isHaveDian\cf0 )\{\
                        \cf4 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'c3\'bb\'b5\'e3
\f0 \cf0 \
                        \cf3 return\cf0  \cf3 NO\cf0 ;\
                    \}\cf3 else\cf0 \{\
                        \cf3 return\cf0  \cf3 YES\cf0 ;\
                    \}\
                \}\
            \}\cf3 else\cf0 \{\
                \cf4 //
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'b2\'bb\'d5\'fd\'c8\'b7
\f0  
\f1 \'b2\'bb\'c4\'dc\'ca\'e4\'c8\'eb\'b3\'fd\'c1\'cb
\f0 0-9
\f1 \'ba\'cd\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'d6\'ae\'cd\'e2\'b5\'c4
\f0  
\f1 \'d7\'d6\'b7\'fb
\f0 \cf0 \
                [\cf3 self\cf0  \cf11 showErrorView\cf0 :\cf5 @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'ca\'fd\'d7\'d6\'a3\'ac\'c7\'d2\'d0\'a1\'ca\'fd\'b5\'e3\'ba\'f3\'d7\'ee\'b6\'e0\'ca\'e4\'c8\'eb\'c1\'bd\'ce\'bb
\f0 "\cf0 ];\
                \cf3 return\cf0  \cf3 NO\cf0 ;\
            \}\
        \}\
        \cf4 //        if (string.length == 0) \{\cf0 \
        \cf4 //            textField.text = @"";\cf0 \
        \cf4 //            return YES;\cf0 \
        \cf4 //        \}\cf0 \
        \cf3 else\cf0 \{\
            \cf3 return\cf0  \cf3 YES\cf0 ;\
        \}\
    \}\
    \cf3 if\cf0  (textField == \cf10 dealNumTextField\cf0 ) \{\
        \cf3 if\cf0  ([string \cf9 length\cf0 ]>\cf6 0\cf0 )\
        \{\
            \cf9 NSLog\cf0 (\cf5 @"sting
\f1 \'a3\'ba
\f0 %@"\cf0 ,string);\
            \cf3 for\cf0  (\cf3 int\cf0  i = \cf6 0\cf0 ; i < string.\cf8 length\cf0 ; i++) \{\
                \cf8 unichar\cf0  single=[string \cf9 characterAtIndex\cf0 :i];\cf4 //
\f1 \'b5\'b1\'c7\'b0\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \cf0 \
                \cf3 if\cf0  ((single >=\cf6 '0'\cf0  && single<=\cf6 '9'\cf0 )||single == \cf6 ' '\cf0 )\cf4 //
\f1 \'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'d5\'fd\'c8\'b7
\f0 \cf0 \
                \{\
                    \cf9 NSLog\cf0 (\cf5 @"theSingle:%hu"\cf0 ,single);\
                \}\
                \cf3 else\cf0 \{\
                    \cf4 //
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'b2\'bb\'d5\'fd\'c8\'b7
\f0  
\f1 \'b2\'bb\'c4\'dc\'ca\'e4\'c8\'eb\'b3\'fd\'c1\'cb
\f0 0-9
\f1 \'ba\'cd\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'d6\'ae\'cd\'e2\'b5\'c4
\f0  
\f1 \'d7\'d6\'b7\'fb
\f0 \cf0 \
                    [\cf3 self\cf0  \cf11 showErrorView\cf0 :\cf5 @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'ca\'fd\'d7\'d6
\f0 "\cf0 ];\
                    \cf3 return\cf0  \cf3 NO\cf0 ;\
                \}\
            \}\
        \}\
        \cf3 else\cf0 \{\
            \cf3 return\cf0  \cf3 YES\cf0 ;\
        \}\
    \}\
    \cf3 return\cf0  \cf3 YES\cf0 ;\
\}}