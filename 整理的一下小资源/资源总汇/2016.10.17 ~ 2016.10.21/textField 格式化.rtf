{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red29\green133\blue25;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16520\viewh11880\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 //- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string \{\cf0 \
\cf2 //    if (textField == dealNumTextField)\{\cf0 \
\cf2 //        NSString* text = textField.text;\cf0 \
\cf2 //        //
\f1 \'c9\'be\'b3\'fd
\f0 \cf0 \
\cf2 //        if([string isEqualToString:@""])\{\cf0 \
\cf2 //            \cf0 \
\cf2 //            //
\f1 \'c9\'be\'b3\'fd\'d2\'bb\'ce\'bb
\f0 \cf0 \
\cf2 //            if(range.length == 1)\{\cf0 \
\cf2 //                //
\f1 \'d7\'ee\'ba\'f3\'d2\'bb\'ce\'bb
\f0 ,
\f1 \'d3\'f6\'b5\'bd\'bf\'d5\'b8\'f1\'d4\'f2\'b6\'e0\'c9\'be\'b3\'fd\'d2\'bb\'b4\'ce
\f0 \cf0 \
\cf2 //                if (range.location == text.length-1 ) \{\cf0 \
\cf2 //                    if ([text characterAtIndex:text.length-1] == ' ') \{\cf0 \
\cf2 //                        [textField deleteBackward];\cf0 \
\cf2 //                    \}\cf0 \
\cf2 //                    return YES;\cf0 \
\cf2 //                \}\cf0 \
\cf2 //                //
\f1 \'b4\'d3\'d6\'d0\'bc\'e4\'c9\'be\'b3\'fd
\f0 \cf0 \
\cf2 //                else\{\cf0 \
\cf2 //                    NSInteger offset = range.location;\cf0 \
\cf2 //                    \cf0 \
\cf2 //                    if (range.location < text.length && [text characterAtIndex:range.location] == ' ' && [textField.selectedTextRange isEmpty]) \{\cf0 \
\cf2 //                        [textField deleteBackward];\cf0 \
\cf2 //                        offset --;\cf0 \
\cf2 //                    \}\cf0 \
\cf2 //                    [textField deleteBackward];\cf0 \
\cf2 //                    textField.text = [self parseString:textField.text];\cf0 \
\cf2 //                    UITextPosition *newPos = [textField positionFromPosition:textField.beginningOfDocument offset:offset];\cf0 \
\cf2 //                    textField.selectedTextRange = [textField textRangeFromPosition:newPos toPosition:newPos];\cf0 \
\cf2 //                    return NO;\cf0 \
\cf2 //                \}\cf0 \
\cf2 //            \}\cf0 \
\cf2 //            else if (range.length > 1) \{\cf0 \
\cf2 //                BOOL isLast = NO;\cf0 \
\cf2 //                //
\f1 \'c8\'e7\'b9\'fb\'ca\'c7\'b4\'d3\'d7\'ee\'ba\'f3\'d2\'bb\'ce\'bb\'bf\'aa\'ca\'bc
\f0 \cf0 \
\cf2 //                if(range.location + range.length == textField.text.length )\{\cf0 \
\cf2 //                    isLast = YES;\cf0 \
\cf2 //                \}\cf0 \
\cf2 //                [textField deleteBackward];\cf0 \
\cf2 //                textField.text = [self parseString:textField.text];\cf0 \
\cf2 //                \cf0 \
\cf2 //                NSInteger offset = range.location;\cf0 \
\cf2 //                if (range.location == 3 || range.location  == 8) \{\cf0 \
\cf2 //                    offset ++;\cf0 \
\cf2 //                \}\cf0 \
\cf2 //                if (isLast) \{\cf0 \
\cf2 //                    //
\f1 \'b9\'e2\'b1\'ea\'d6\'b1\'bd\'d3\'d4\'da\'d7\'ee\'ba\'f3\'d2\'bb\'ce\'bb\'c1\'cb
\f0 \cf0 \
\cf2 //                \}else\{\cf0 \
\cf2 //                    UITextPosition *newPos = [textField positionFromPosition:textField.beginningOfDocument offset:offset];\cf0 \
\cf2 //                    textField.selectedTextRange = [textField textRangeFromPosition:newPos toPosition:newPos];\cf0 \
\cf2 //                \}\cf0 \
\cf2 //                \cf0 \
\cf2 //                return NO;\cf0 \
\cf2 //            \}\cf0 \
\cf2 //            \cf0 \
\cf2 //            else\{\cf0 \
\cf2 //                return YES;\cf0 \
\cf2 //            \}\cf0 \
\cf2 //        \}\cf0 \
\cf2 //        \cf0 \
\cf2 //        else if(string.length >0)\{\cf0 \
\cf2 //            \cf0 \
\cf2 //            //
\f1 \'cf\'de\'d6\'c6\'ca\'e4\'c8\'eb\'d7\'d6\'b7\'fb\'b8\'f6\'ca\'fd
\f0 \cf0 \
\cf2 //            if (([self noneSpaseString:textField.text].length + string.length - range.length > 11) ) \{\cf0 \
\cf2 //                return NO;\cf0 \
\cf2 //            \}\cf0 \
\cf2 //            //
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ca\'c7\'b4\'bf\'ca\'fd\'d7\'d6
\f0 (
\f1 \'c7\'a7\'c9\'b1\'b5\'c4\'cb\'d1\'b9\'b7\'a3\'ac\'b0\'d9\'b6\'c8\'ca\'e4\'c8\'eb\'b7\'a8\'a3\'ac\'ca\'fd\'d7\'d6\'bc\'fc\'c5\'cc\'be\'d3\'c8\'bb\'bf\'c9\'d2\'d4\'ca\'e4\'c8\'eb\'c6\'e4\'cb\'fb\'d7\'d6\'b7\'fb
\f0 )\cf0 \
\cf2 //            //            if(![string isNum])\{\cf0 \
\cf2 //            //                return NO;\cf0 \
\cf2 //            //            \}\cf0 \
\cf2 //            [textField insertText:string];\cf0 \
\cf2 //            textField.text = [self parseString:textField.text];\cf0 \
\cf2 //            \cf0 \
\cf2 //            NSInteger offset = range.location + string.length;\cf0 \
\cf2 //            if (range.location == 3 || range.location  == 8) \{\cf0 \
\cf2 //                offset ++;\cf0 \
\cf2 //            \}\cf0 \
\cf2 //            UITextPosition *newPos = [textField positionFromPosition:textField.beginningOfDocument offset:offset];\cf0 \
\cf2 //            textField.selectedTextRange = [textField textRangeFromPosition:newPos toPosition:newPos];\cf0 \
\cf2 //            return NO;\cf0 \
\cf2 //        \}else\{\cf0 \
\cf2 //            return YES;\cf0 \
\cf2 //        \}\cf0 \
\cf2 //    \}\cf0 \
\cf2 //    return YES;\cf0 \
\cf2 //\}\cf0 \
\cf2 //-(NSString*)noneSpaseString:(NSString*)string\cf0 \
\cf2 //\{\cf0 \
\cf2 //    return [string stringByReplacingOccurrencesOfString:@" " withString:@""];\
\
//            string = [string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];  //
\f1 \'c8\'a5\'b3\'fd\'b5\'f4\'ca\'d7\'ce\'b2\'b5\'c4\'bf\'d5\'b0\'d7\'d7\'d6\'b7\'fb\'ba\'cd\'bb\'bb\'d0\'d0\'d7\'d6\'b7\'fb
\f0 \cf0 \
\cf2 //        string = [string stringByReplacingOccurrencesOfString:@" " withString:@""];\cf0 \
\cf2 //        string = [string stringByReplacingOccurrencesOfString:@"\\r" withString:@""];\cf0 \
\cf2 //        string = [string stringByReplacingOccurrencesOfString:@"\\n" withString:@""];\
\
\cf0 \
\cf2 //\}\cf0 \
\cf2 //\cf0 \
\cf2 //- (NSString*)parseString:(NSString*)string\cf0 \
\cf2 //\{\cf0 \
\cf2 //    if (!string) \{\cf0 \
\cf2 //        return nil;\cf0 \
\cf2 //    \}\cf0 \
\cf2 //    NSMutableString* mStr = [NSMutableString stringWithString:[string stringByReplacingOccurrencesOfString:@" " withString:@""]];\cf0 \
\cf2 //    if (mStr.length >3) \{\cf0 \
\cf2 //        [mStr insertString:@" " atIndex:3];\cf0 \
\cf2 //    \}if (mStr.length > 8) \{\cf0 \
\cf2 //        [mStr insertString:@" " atIndex:8];\cf0 \
\cf2 //        \cf0 \
\cf2 //    \}\cf0 \
\cf2 //    \cf0 \
\cf2 //    return  mStr;\cf0 \
\cf2 //\}}