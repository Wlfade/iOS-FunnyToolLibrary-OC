{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red180\green0\blue98;\red110\green32\blue13;\red77\green0\blue158;
\red92\green38\blue153;\red46\green13\blue110;\red186\green0\blue17;\red68\green137\blue147;\red29\green133\blue25;
\red32\green60\blue63;\red0\green11\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28140\viewh15220\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 @property\cf0  (\cf2 nonatomic\cf0 , \cf2 assign\cf0 ) \cf2 BOOL\cf0  isHaveDian; 
\f1 //\'ca\'c7\'b7\'f1\'ca\'e4\'c8\'eb\'c1\'cb\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \
\cf2 @property\cf0  (\cf2 nonatomic\cf0 , \cf2 assign\cf0 ) \cf2 BOOL\cf0  isFirstZero; 
\f1 //\'b5\'da\'d2\'bb\'ce\'bb\'ca\'e4\'c8\'eb\'ca\'c7\'b7\'f1\'ce\'aa0 
\f0 \cf3 \
\
\
#pragma mark 
\f1 \'d5\'fd\'c8\'b7\'b5\'c4
\f0 TextField
\f1 \'c5\'d0\'b6\'cf
\f0  textFieldDelegate\
\cf0 - (\cf2 BOOL\cf0 )textField:(\cf4 UITextField\cf0  *)textField shouldChangeCharactersInRange:(\cf5 NSRange\cf0 )range replacementString:(\cf4 NSString\cf0  *)string \{\
    \cf6 NSLog\cf0 (\cf7 @"%@"\cf0 ,string);\
    \cf2 if\cf0  (textField == \cf8 moneyTextField\cf0 ) \{\
        \cf4 NSMutableString\cf0  * futureString = [\cf4 NSMutableString\cf0  \cf6 stringWithString\cf0 :textField.\cf5 text\cf0 ];\
        \cf9 //
\f1 \'b5\'da\'b6\'fe\'b2\'bf\'b7\'d6 \'bc\'ec\'b2\'e2\'ca\'e4\'c8\'eb\'c4\'da\'c8\'dd\'ca\'c7\'b7\'f1\'b4\'f3\'d3\'da\'d7\'ee\'b4\'f3\'d6\'b5 \'c8\'e7\'b9\'fb\'ca\'c7 \'d4\'f2 \'bb\'e1\'bd\'ab\'d6\'b5\'c9\'be\'bc\'f5\'b3\'c9\'ce\'aa\'d0\'a1\'d3\'da\'d7\'ee\'b4\'f3\'d6\'b5
\f0 \cf0 \
        \cf2 int\cf0  a = (\cf2 int\cf0 )futureString.\cf5 length\cf0 ;\
        \cf4 NSString\cf0  *textString = futureString;\
        \cf2 do\cf0  \{\
            textString = [futureString \cf6 substringToIndex\cf0 :a];\
            a--;\
        \} \cf2 while\cf0  ([textString \cf6 floatValue\cf0 ]>[\cf8 _maxTransferMoneyStr\cf0  \cf6 floatValue\cf0 ]);\
        \cf6 NSLog\cf0 (\cf7 @"%@"\cf0 ,textString);\
        textField.\cf5 text\cf0  = textString;\
        \
        [futureString  \cf6 insertString\cf0 :string \cf6 atIndex\cf0 :range.\cf5 location\cf0 ];\
        \cf2 float\cf0  moneyFloat = [futureString \cf6 floatValue\cf0 ];\
        \cf2 if\cf0  (moneyFloat > [\cf8 _maxTransferMoneyStr\cf0  \cf6 floatValue\cf0 ]) \{\
            [\cf2 self\cf0  \cf10 _showErrorView\cf0 :[\cf4 NSString\cf0  \cf6 stringWithFormat\cf0 :\cf7 @"
\f1 \'d7\'ee\'b4\'f3\'ca\'e4\'c8\'eb\'bd\'f0\'b6\'ee\'ce\'aa
\f0 %@
\f1 \'d4\'aa
\f0 "\cf0 ,\cf8 _maxTransferMoneyStr\cf0 ]];\
            \cf2 return\cf0  \cf2 NO\cf0 ;\
        \}\
        \cf9 //
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'ca\'c7\'b7\'f1\'b2\'e9\'d5\'d2\'b5\'bd
\f0 \'93
\f1 \'d0\'a1\'ca\'fd\'b5\'e3
\f0 \'94\cf0 \
        \cf2 if\cf0  ([textField.\cf5 text\cf0  \cf6 rangeOfString\cf0 :\cf7 @"."\cf0 ].\cf5 location\cf0 ==\cf5 NSNotFound\cf0 ) \{\
            \cf8 _isHaveDian\cf0  = \cf2 NO\cf0 ;\
        \}\
        \cf9 //
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'ca\'c7\'b7\'f1\'b2\'e9\'d5\'d2\'b5\'bd
\f0 \'93
\f1 \'ca\'fd\'d7\'d6
\f0 0\'94\cf0 \
        \cf2 if\cf0  ([textField.\cf5 text\cf0  \cf6 rangeOfString\cf0 :\cf7 @"0"\cf0 ].\cf5 location\cf0 ==\cf5 NSNotFound\cf0 ) \{\
            \cf8 _isFirstZero\cf0  = \cf2 NO\cf0 ;\
        \}\
        \
        \cf2 if\cf0  ([string \cf6 length\cf0 ]>\cf11 0\cf0 )\
        \{\
            \cf9 //            NSLog(@"sting
\f1 \'a3\'ba
\f0 %@",string);\cf0 \
            \cf5 unichar\cf0  single=[string \cf6 characterAtIndex\cf0 :\cf11 0\cf0 ];\cf9 //
\f1 \'b5\'b1\'c7\'b0\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \cf0 \
            \cf2 if\cf0  ((single >=\cf11 '0'\cf0  && single<=\cf11 '9'\cf0 ) || single==\cf11 '.'\cf0 )\cf9 //
\f1 \'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'d5\'fd\'c8\'b7
\f0 \cf0 \
            \{\
                \cf2 if\cf0 ([textField.\cf5 text\cf0  \cf6 length\cf0 ]==\cf11 0\cf0 )\{\
                    \cf2 if\cf0 (single == \cf11 '.'\cf0 )\{\
                        \cf9 //
\f1 \'ca\'d7\'d7\'d6\'c4\'b8\'b2\'bb\'c4\'dc\'ce\'aa\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                        \cf2 return\cf0  \cf2 NO\cf0 ;\
                    \}\
                    \cf2 if\cf0  (single == \cf11 '0'\cf0 ) \{\
                        \cf9 //
\f1 \'ca\'d7\'ce\'bb\'ca\'e4\'c8\'eb\'ce\'aa\'ca\'fd\'d7\'d6
\f0 0\cf0 \
                        \cf8 _isFirstZero\cf0  = \cf2 YES\cf0 ;\
                        [\cf2 self\cf0  \cf10 _showErrorView\cf0 :[\cf4 NSString\cf0  \cf6 stringWithFormat\cf0 :\cf7 @"
\f1 \'d7\'ee\'d0\'a1\'ca\'e4\'c8\'eb\'bd\'f0\'b6\'ee\'ce\'aa
\f0 %@
\f1 \'d4\'aa
\f0 "\cf0 ,\cf8 _minTransferMoneyStr\cf0 ]];\
                        \cf2 return\cf0  \cf2 YES\cf0 ;\
                    \}\
                \}\
                \cf2 if\cf0  (single==\cf11 '.'\cf0 )\{\
                    \cf2 if\cf0 (!\cf8 _isHaveDian\cf0 )\cf9 //text
\f1 \'d6\'d0\'bb\'b9\'c3\'bb\'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                    \{\
                        \cf8 _isHaveDian\cf0 =\cf2 YES\cf0 ;\
                        \cf2 return\cf0  \cf2 YES\cf0 ;\
                    \}\cf2 else\cf0 \{\
                        \cf2 return\cf0  \cf2 NO\cf0 ;\
                    \}\
                \}\
                \cf2 else\cf0  \cf2 if\cf0 (single==\cf11 '0'\cf0 )\{\
                    \cf2 if\cf0  ((\cf8 _isFirstZero\cf0 &&\cf8 _isHaveDian\cf0 )||(!\cf8 _isFirstZero\cf0 &&\cf8 _isHaveDian\cf0 )) \{\
                        \cf9 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'d3\'d0
\f0 .
\f1 \'a3\'a8
\f0 0.01
\f1 \'a3\'a9\'bb\'f2\'ca\'d7\'ce\'bb\'c3\'bb
\f0 0
\f1 \'d3\'d0
\f0 .
\f1 \'a3\'a8
\f0 10200.00
\f1 \'a3\'a9\'bf\'c9\'ca\'e4\'c8\'eb\'c1\'bd\'ce\'bb\'ca\'fd\'b5\'c4
\f0 0\cf0 \
                        \cf9 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0 
\f1 \'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'bb\'f2\'d4\'f2
\f0  
\f1 \'ca\'d7\'ce\'bb\'b2\'bb\'ce\'aa
\f0 0 
\f1 \'cd\'ac\'ca\'b1\'d3\'d0\'d0\'a1\'ca\'fd\'b5\'e3
\f0 \cf0 \
                        \cf6 NSLog\cf0 (\cf7 @"%@"\cf0 ,textField.\cf5 text\cf0 );\
                        \cf2 if\cf0 ([textField.\cf5 text\cf0  \cf6 isEqualToString\cf0 :\cf7 @"0.0"\cf0 ])\{\
                            \cf2 return\cf0  \cf2 NO\cf0 ;\
                        \}\
                        \cf5 NSInteger\cf0  flag=\cf11 0\cf0 ;\
                        \cf2 const\cf0  \cf5 NSInteger\cf0  limited = \cf11 2\cf0 ;\
                        \cf2 for\cf0  (\cf2 int\cf0  i = (\cf2 int\cf0 )futureString.\cf5 length\cf0 -\cf11 1\cf0 ; i>=\cf11 0\cf0 ; i--) \{\
                            \
                            \cf2 if\cf0  ([futureString \cf6 characterAtIndex\cf0 :i] == \cf11 '.'\cf0 ) \{\
                                \
                                \cf2 if\cf0  (flag > limited) \{\
                                    \cf2 return\cf0  \cf2 NO\cf0 ;\
                                \}\
                                \cf2 break\cf0 ;\
                            \}\
                            flag++;\
                        \}\
                        \
                        \cf2 return\cf0  \cf2 YES\cf0 ;\
                    \}\cf2 else\cf0  \cf2 if\cf0  (\cf8 _isFirstZero\cf0 &&!\cf8 _isHaveDian\cf0 )\{\
                        \cf9 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'c3\'bb
\f0 .
\f1 \'b2\'bb\'c4\'dc\'d4\'d9\'ca\'e4\'c8\'eb
\f0 0\cf0 \
                        \cf2 return\cf0  \cf2 NO\cf0 ;\
                    \}\cf2 else\cf0 \{\
                        \cf2 return\cf0  \cf2 YES\cf0 ;\
                    \}\
                \}\
                \cf2 else\cf0 \{\
                    \cf2 if\cf0  (\cf8 _isHaveDian\cf0 )\{\
                        \cf9 //
\f1 \'b4\'e6\'d4\'da\'d0\'a1\'ca\'fd\'b5\'e3\'a3\'ac\'b1\'a3\'c1\'f4\'c1\'bd\'ce\'bb\'d0\'a1\'ca\'fd
\f0 \cf0 \
                        \cf5 NSInteger\cf0  flag=\cf11 0\cf0 ;\
                        \cf2 const\cf0  \cf5 NSInteger\cf0  limited = \cf11 2\cf0 ;\
                        \cf2 for\cf0  (\cf2 int\cf0  i = (\cf2 int\cf0 )futureString.\cf5 length\cf0 -\cf11 1\cf0 ; i>=\cf11 0\cf0 ; i--) \{\
                            \
                            \cf2 if\cf0  ([futureString \cf6 characterAtIndex\cf0 :i] == \cf11 '.'\cf0 ) \{\
                                \
                                \cf2 if\cf0  (flag > limited) \{\
                                    \cf2 return\cf0  \cf2 NO\cf0 ;\
                                \}\
                                \cf2 break\cf0 ;\
                            \}\
                            flag++;\
                        \}\
                        \cf2 return\cf0  \cf2 YES\cf0 ;\
                    \}\cf2 else\cf0  \cf2 if\cf0 (\cf8 _isFirstZero\cf0 &&!\cf8 _isHaveDian\cf0 )\{\
                        \cf9 //
\f1 \'ca\'d7\'ce\'bb\'d3\'d0
\f0 0
\f1 \'c3\'bb\'b5\'e3
\f0 \cf0 \
                        \cf2 return\cf0  \cf2 NO\cf0 ;\
                    \}\cf2 else\cf0 \{\
                        \cf2 return\cf0  \cf2 YES\cf0 ;\
                    \}\
                \}\
            \}\cf2 else\cf0 \{\
                \cf9 //
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'b2\'bb\'d5\'fd\'c8\'b7
\f0  
\f1 \'b2\'bb\'c4\'dc\'ca\'e4\'c8\'eb\'b3\'fd\'c1\'cb
\f0 0-9
\f1 \'ba\'cd\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'d6\'ae\'cd\'e2\'b5\'c4
\f0  
\f1 \'d7\'d6\'b7\'fb
\f0 \cf0 \
                [\cf2 self\cf0  \cf10 showErrorView\cf0 :\cf7 @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'ca\'fd\'d7\'d6\'a3\'ac\'c7\'d2\'d0\'a1\'ca\'fd\'b5\'e3\'ba\'f3\'d7\'ee\'b6\'e0\'ca\'e4\'c8\'eb\'c1\'bd\'ce\'bb
\f0 "\cf0 ];\
                \cf2 return\cf0  \cf2 NO\cf0 ;\
            \}\
        \}\
        \cf9 //        if (string.length == 0) \{\cf0 \
        \cf9 //            textField.text = @"";\cf0 \
        \cf9 //            return YES;\cf0 \
        \cf9 //        \}\cf0 \
        \cf2 else\cf0 \{\
            \cf2 return\cf0  \cf2 YES\cf0 ;\
        \}\
    \}\
    \cf2 if\cf0  (textField == \cf8 dealNumTextField\cf0 ) \{\
        \cf2 if\cf0  ([string \cf6 length\cf0 ]>\cf11 0\cf0 )\
        \{\
            \cf6 NSLog\cf0 (\cf7 @"sting
\f1 \'a3\'ba
\f0 %@"\cf0 ,string);\
            \cf2 for\cf0  (\cf2 int\cf0  i = \cf11 0\cf0 ; i < string.\cf5 length\cf0 ; i++) \{\
                \cf5 unichar\cf0  single=[string \cf6 characterAtIndex\cf0 :i];\cf9 //
\f1 \'b5\'b1\'c7\'b0\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \cf0 \
                \cf2 if\cf0  ((single >=\cf11 '0'\cf0  && single<=\cf11 '9'\cf0 )||single == \cf11 ' '\cf0 )\cf9 //
\f1 \'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'d5\'fd\'c8\'b7
\f0 \cf0 \
                \{\
                    \cf6 NSLog\cf0 (\cf7 @"theSingle:%hu"\cf0 ,single);\
                \}\
                \cf2 else\cf0 \{\
                    \cf9 //
\f1 \'ca\'e4\'c8\'eb\'b5\'c4\'ca\'fd\'be\'dd\'b8\'f1\'ca\'bd\'b2\'bb\'d5\'fd\'c8\'b7
\f0  
\f1 \'b2\'bb\'c4\'dc\'ca\'e4\'c8\'eb\'b3\'fd\'c1\'cb
\f0 0-9
\f1 \'ba\'cd\'d0\'a1\'ca\'fd\'b5\'e3
\f0  
\f1 \'d6\'ae\'cd\'e2\'b5\'c4
\f0  
\f1 \'d7\'d6\'b7\'fb
\f0 \cf0 \
                    [\cf2 self\cf0  \cf10 showErrorView\cf0 :\cf7 @"
\f1 \'c7\'eb\'ca\'e4\'c8\'eb\'ca\'fd\'d7\'d6
\f0 "\cf0 ];\
                    \cf2 return\cf0  \cf2 NO\cf0 ;\
                \}\
            \}\
        \}\
        \cf2 else\cf0 \{\
            \cf2 return\cf0  \cf2 YES\cf0 ;\
        \}\
    \}\
    \cf2 return\cf0  \cf2 YES\cf0 ;\
\}}